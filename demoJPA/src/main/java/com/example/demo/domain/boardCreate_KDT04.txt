** 게시판 관리
1. board Table Create
=> 컬럼정의
	: seq(P.Key), id, title, content, regdate, cnt(조회수), 댓글관리(root, step, indent)
	
=> 생성문
create table board(
seq int Primary Key Auto_Increment,
id varchar(10) not null,
title varchar(200) not null,
content Text(2000),
regdate DateTime default Current_TimeStamp,
cnt int default 0,
root int default 0,
step int default 0,
indent int default 0
);

=> 입력문
insert into board(id,title,content)
values('kso','Spring을 배워봅시다.','어렵지 않아요 하하');
insert into board(id,title,content)
values('lsw','의존성 주입을 배워봅시다.','객체간 의존관계를 외부의 조립기기가 수행하는 것을 말합니다.');
insert into board(id,title,content)
values('img4029','느슨한 결합이란?','객체는 인터페이스에 의한 의존관계만 아는겁니다');
insert into board(id,title,content)
values('KCM','Spring 설정파일.','Container가 어떻게 일할지를 자동으로 설정하는겁니다. 이해했어요');

--------------------------------------------------------------------------

select seq, id, title, regdate, cnt, root from board;
=> 댓글 관리(원글 : seq 와 root가 동일하야한다.)
	-> 수정(root값 모든 데이터 수정)
		update board set root = seq ;

=> BoardDAO CRUD 구현
	-> insert에서 seq와 root가 동일한 값으로 입력되어야한다.
	-> seq를 Auto_Increment로 하면 불가능함(실시간으로 입력되는 경우 데이터가 일치하지 않게됨)
	-> 그러므로 ifNull 함수를 적용한다(Oracle의 nvl)
	
=> insert 구문
insert into board values(
(select * from (select ifNull(max(seq),0)+1 from board)  as temp),
seq, 
"kso", "이곳은 title", "이곳은 content", "Current_TimeStamp",0,
root, 0, 0);

=> DAO 구문
insert into board values(
(select * from (select ifNull(max(seq),0)+1 from board)  as temp),
?, ?, ?, ?, "Current_TimeStamp",0,
(select * from (select ifNull(max(seq),0)+1 from board)  as temp), 0, 0);

=> update 구문 : title과 content만 수정 가능하며, 글번호를 조건으로 변경한다.

2. Project(자바코드:Application)
2.1) Java
=> BoardDTO, BoardDAO, BoardService,BoardServiceImpl BoardController 생성

2.2) jsp
=> BoardList, BoardDetail, BoardInsert, BoardUpdate 생성

=> Login 한 경우에만 List 에서 title 클릭시 detail 로
=> Login 한 경우에만 List 에서 글등록 할 수 있도록 메뉴 표시
=> 내글인 경우에만 boardDetail 에 글수정 과 글삭제 메뉴 표시하여 수정 또는 삭제할 수 있도록 

2.3) 조회수 증가
=> sql 
	-> 1) update board set cnt=cnt+1 where seq=?
	-> 2) 자바코드 상에서 cnt+1 전달하면 set cnt=? 가능(이후 update 추가)

=> 조건 : 글쓴이와 글보는이가 다른경우에 카운팅
=> 어디서 : detail에서 증가 처리

2.4) 계층적 답변형 게시판의 답글달기

=> board 조회
select seq, id, title, root, step, indent from board order by root desc, step asc;

=> 각 컬럼의 역할
   -> root: 원글의 seq
   -> step: 댓글의 출력순서
   -> indent: 댓글의 레벨
원글     → root : 자신의 seq , step : 0, indent : 0
1 댓글   → root : 원글의 seq , step : 1에서 2로, 2에서 3으로 변경, indent : 1
2 댓글   → root : 원글의 seq , step : 1에서 2로 변경, indent : 1
3 댓글   → root : 원글의 seq , step : 1, indent : 1

=> 댓글 입력 Form과 Controller 매핑메서드, 메뉴 추가